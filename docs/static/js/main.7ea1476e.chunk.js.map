{"version":3,"sources":["utils/customerComponents/FiledsTable.tsx","utils/customerComponents/ui.ts","utils/customerComponents/Input.tsx","constants.ts","base/ui.ts","utils/markdown/index.tsx","base/constants.ts","base/index.tsx","validator/constants.ts","validator/base.tsx","validator/shouldValid.tsx","validator/index.tsx","deps/constants.ts","deps/index.tsx","utils/customerComponents/Navigator.tsx","app.tsx","index.tsx"],"names":["TdCell","props","onMouseEnter","onMouseLeave","restProps","DataTable","components","body","cell","Edit","value","onChange","keyName","validate","required","error","useEffect","e","target","prevValidate","style","color","FiledsTable","getError","rowSelection","selectedRowKeys","reduce","all","name","selectedRowKeysValue","forEach","key","includes","columns","title","dataIndex","width","render","text","_","isBoolean","record","index","getColumns","rowKey","dataSource","pagination","Shine","styled","div","display","flexDirection","Math","random","getData","Promise","resolve","setTimeout","stationDesignedG1","stationDesignedG4","Wrapper","marked","setOptions","highlight","code","lang","languages","getSummary","summary","detail","language","getCode","Marked","markdown","padding","border","margin","dangerouslySetInnerHTML","__html","designInfo","label","Input","form","useForm","then","res","setFormValue","colCount","labelColSpan","options","base1","base2","shouldVaild1","info1","rules","pattern","message","info2","length","onClick","validateFields","console","log","info","notRequiredPaths","data","onchange","atTop","placeholder","deps","DEPS","ALL","children","history","useNavigate","fontWeight","fontSize","borderBottom","introduction","path","element","url","to","Introduction","RouteList","concat","map","Navigator","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ea1476e.chunk.js","sourcesContent":["/**\n * @file 模板特征值\n * @author caifeng(caifeng01@baidu.com)\n */\nimport { Table, Input } from \"antd\";\nimport _ from \"lodash\";\nimport { CustomComponent } from \"react-ref-form\";\nimport { useEffect } from \"react\";\n\n// 处理antd table的卡顿问题\nconst TdCell = (props: any) => {\n  const { onMouseEnter, onMouseLeave, ...restProps } = props;\n  return <td {...restProps} />;\n};\nconst DataTable = (props: any) => (\n  <Table components={{ body: { cell: TdCell } }} {...props} />\n);\n\nconst Edit = ({\n  value,\n  onChange,\n  keyName,\n  validate,\n  required,\n  error\n}: Partial<CustomComponent>) => {\n  const change = (e: any) => {\n    onChange?.(e.target.value, keyName, { prevValidate: () => required });\n  };\n  useEffect(() => {\n    validate?.((value) => {\n      if (!value) return \"请输入\";\n      if (+value < 0 || +value > 65535) {\n        return \"端口号范围为0-65535\";\n      }\n      return;\n    }, keyName);\n  }, []);\n  return (\n    <>\n      <Input onChange={change} value={value} />\n      <div style={{ color: \"red\" }}>{error}</div>\n    </>\n  );\n};\n\nconst getColumns = ({ onChange, validate, getError }: Record<string, any>) => [\n  {\n    title: \"名称\",\n    dataIndex: \"name\",\n    key: \"name\",\n    width: \"20%\"\n  },\n  {\n    title: \"数据类型\",\n    dataIndex: \"@type\",\n    key: \"@type\",\n    width: \"20%\"\n  },\n  {\n    title: \"必填\",\n    dataIndex: \"required\",\n    key: \"required\",\n    width: \"20%\",\n    render: (text: string) => <div>{_.isBoolean(text) && text ? \"是\" : \"否\"}</div>\n  },\n  {\n    title: \"值\",\n    dataIndex: \"value\",\n    key: \"value\",\n    width: \"40%\",\n    render: (text: string, record: any, index: number) => (\n      <Edit\n        value={text}\n        validate={validate}\n        onChange={onChange}\n        keyName={`${index}.value`}\n        required={record.required}\n        error={getError(`${index}.value`)}\n      />\n    )\n  }\n];\n\nconst FiledsTable = ({\n  onChange,\n  value,\n  validate,\n  getError\n}: CustomComponent) => {\n  const selectedRowKeys = (value as any[])?.reduce(\n    (all, { name, required }) => (required ? [...all, name] : all),\n    []\n  );\n\n  const handleSelectChange = (selectedRowKeysValue: string[]) => {\n    (value as any[]).forEach(({ name }, key) => {\n      onChange(selectedRowKeysValue.includes(name), `${key}.required`);\n    });\n  };\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: handleSelectChange\n  };\n  const columns = getColumns({ onChange, validate, getError });\n\n  return (\n    <DataTable\n      rowKey=\"name\"\n      dataSource={value || []}\n      columns={columns}\n      rowSelection={rowSelection}\n      pagination={false}\n    />\n  );\n};\n\nexport default FiledsTable;\n","import styled from 'styled-components';\n\n// 重新渲染提示\nexport const Shine = styled.div`\n    width: 100%;\n    height: 4px;\n    @keyframes emit {\n        from {\n            background: #4bf14b;\n        }\n        to {\n            background: transparent;\n        }\n    }\n    animation: 1s emit ease;\n`;","import { Shine } from \"./ui\";\nimport { Input } from \"antd\";\nimport { CustomComponent } from \"react-ref-form\";\n\nexport default ({ value, onChange, error }: CustomComponent) => (\n  <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n    <Shine key={Math.random()} />\n    <Input onChange={(e) => onChange(e.target.value)} value={value} />\n    <div style={{ color: \"red\" }}>{error}</div>\n  </div>\n);\n","export const getData = () =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        stationDesignedG1: \"1weq\",\n        stationDesignedG4: [\n          {\n            name: \"axcvvf\",\n            \"@type\": \"integer\",\n            required: false\n          },\n          {\n            name: \"fields_2\",\n            \"@type\": \"long\",\n            required: true\n          }\n        ]\n      });\n    }, 1000);\n  });\n","import styled from \"styled-components\";\nexport const Wrapper = styled.div`\n  input {\n    width: 180px;\n  }\n`;\n","import { marked } from \"marked\";\nimport { languages, highlight } from \"prismjs\";\nimport \"prismjs/themes/prism-tomorrow.css\";\n\nmarked.setOptions({\n  highlight: (code = \"\", lang = \"\") =>\n    languages[lang] ? highlight(code, languages[lang], \"tsx\") : code\n});\n\nconst getCode = (code: string, language: string) =>\n  \"\\n```\" + language + code + \"\\n```\";\n\nexport const getSummary = ({\n  summary = \"点击查看详情\",\n  detail = \"\",\n  language = \"js\"\n}) => `\n<details><summary>${summary}</summary>\n  ${getCode(detail, language)}\n</details>\n`;\n\nexport const Marked = ({ markdown }: { markdown: string }) => (\n  <div\n    style={{\n      padding: \"10px 30px\",\n      border: \"1px solid red\",\n      margin: \"10px\"\n    }}\n    dangerouslySetInnerHTML={{\n      __html: marked(markdown)\n    }}\n  />\n);\n","import { getSummary } from \"../utils/markdown\";\n\nexport const markdown = getSummary({\n  summary: \"点击查看示例代码\",\n  detail: `\nimport { useEffect } from \"react\";\nimport { useForm, RefItem } from \"react-ref-form\";\nimport FiledsTable from \"../customerComponents/FiledsTable\";\nimport Input from \"../customerComponents/Input\";\nimport { getData } from \"../constants\";\nimport { Wrapper } from \"./ui\";\n\nconst designInfo = [\n  {\n    label: \"换热站设计流量1\",\n    keyName: \"stationDesignedG1\",\n    required: true,\n    value: Input\n  },\n  {\n    label: \"换热站设计流量2\",\n    keyName: \"stationDesignedG2\",\n    value: Input\n  },\n  {\n    label: \"换热站设计流量3\",\n    keyName: \"stationDesignedG3\",\n    value: Input\n  },\n  {\n    label: \"换热站设计流量4\",\n    keyName: \"stationDesignedG4\",\n    value: FiledsTable\n  }\n];\n\nexport default () => {\n  const form = useForm();\n\n  useEffect(() => {\n    getData().then((res: any) => form.setFormValue(res));\n  }, []);\n\n  return (\n    <Wrapper>\n      <h1>基本用法</h1>\n      <h3>1、1列 label占比6/24</h3>\n      <RefItem colCount={1} labelColSpan={6} options={designInfo} form={form} />\n      <h3>2、1列 label占比9/24</h3>\n      <RefItem colCount={1} labelColSpan={9} options={designInfo} form={form} />\n      <h3>3、2列 label占比6/24</h3>\n      <RefItem colCount={2} labelColSpan={6} options={designInfo} form={form} />\n    </Wrapper>\n  );\n};\n  `,\n  language: \"javascript\"\n});\n\nexport const markdown2 = getSummary({\n  summary: \"点击查看示例代码\",\n  detail: `\nimport { useEffect } from \"react\";\nimport { useForm, RefItem, DEPS, CustomComponent } from \"react-ref-form\";\nimport {Input as AntdInput} from 'antd';\nimport { getData } from \"../constants\";\n\nconst Input = ({ value, onChange, error, validate }: CustomComponent) => {\n  useEffect(() => {\n    validate((value) => {\n      if (!value) return \"请输入内容\";\n      if (value.length > 10) {\n        return \"最多10个字符\";\n      }\n      return;\n    });\n  }, []);\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <AntdInput onChange={(e) => onChange(e.target.value)} value={value} />\n      <div style={{ color: \"red\" }}>{error}</div>\n    </div>\n  );\n};\n\nconst designInfo = [\n  {\n    label: \"换热站设计流量1\",\n    keyName: \"stationDesignedG\",\n    required: true,\n    value: Input\n  }\n];\nexport default () => {\n  const form = useForm();\n\n  useEffect(() => {\n    getData().then((res: any) => form.setFormValue(res));\n  }, []);\n\n  return (\n      <RefItem colCount={1} labelColSpan={6} options={designInfo} form={form} />\n  );\n};  \n`,\n  language: \"javascript\"\n});\n","import { useEffect } from \"react\";\nimport { useForm, RefItem } from \"react-ref-form\";\nimport FiledsTable from \"../utils/customerComponents/FiledsTable\";\nimport Input from \"../utils/customerComponents/Input\";\nimport { getData } from \"../constants\";\nimport { Wrapper } from \"./ui\";\nimport { Marked } from \"../utils/markdown\";\nimport { markdown } from \"./constants\";\n\nconst designInfo = [\n  {\n    label: \"换热站设计流量1\",\n    keyName: \"stationDesignedG1\",\n    required: true,\n    value: Input\n  },\n  {\n    label: \"换热站设计流量2\",\n    keyName: \"stationDesignedG2\",\n    value: Input\n  },\n  {\n    label: \"换热站设计流量3\",\n    keyName: \"stationDesignedG3\",\n    value: Input\n  },\n  {\n    label: \"换热站设计流量4\",\n    keyName: \"stationDesignedG4\",\n    value: FiledsTable\n  }\n];\n\nexport default () => {\n  const form = useForm();\n\n  useEffect(() => {\n    getData().then((res: any) => form.setFormValue(res));\n  }, []);\n\n  return (\n    <Wrapper>\n      <h1>基本用法</h1>\n      <h3>1、1列 label占比6/24</h3>\n      <RefItem colCount={1} labelColSpan={6} options={designInfo} form={form} />\n      <h3>2、1列 label占比9/24</h3>\n      <RefItem colCount={1} labelColSpan={9} options={designInfo} form={form} />\n      <h3>3、2列 label占比6/24</h3>\n      <RefItem colCount={2} labelColSpan={6} options={designInfo} form={form} />\n      <Marked markdown={markdown} />\n    </Wrapper>\n  );\n};\n","import { getSummary } from \"../utils/markdown\";\n\nexport const base1 = getSummary({\n  summary: \"点击查看示例代码\",\n  detail: `\nimport { useEffect } from \"react\";\nimport { useForm, RefItem, CustomComponent } from \"react-ref-form\";\nimport {Input as AntdInput} from 'antd';\n\nconst Input = ({ value, onChange, error }: CustomComponent) => (\n  <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n    <AntdInput onChange={(e) => onChange(e.target.value)} value={value} />\n    <div style={{color: 'red'}}>{error}</div>\n  </div>\n);\n\nconst info = [\n  {\n    label: \"换热站设计流量1\",\n    keyName: \"stationDesignedG1\",\n    rules: [\n      { pattern: /\\\\w+/g, message: \"请输入内容\" },\n      { pattern: /^\\\\w{1,10}$/, message: \"最多10个字符\" }\n    ],\n    value: Input\n  }\n];\n\nexport default () => {\n  const form = useForm();\n\n  return (\n    <>\n      <RefItem colCount={1} labelColSpan={6} options={info} form={form} />\n      <Button onClick={submit}>提交</Button>\n    </>\n  );\n};  \n  `,\n  language: \"javascript\"\n});\n\nexport const base2 = getSummary({\n  summary: \"点击查看示例代码\",\n  detail: `\nimport { useEffect } from \"react\";\nimport { useForm, RefItem, CustomComponent } from \"react-ref-form\";\nimport {Input as AntdInput} from 'antd';\n\nconst CustomerInput = ({\n  value,\n  onChange,\n  error,\n  validate\n}: CustomComponent) => {\n  useEffect(() => {\n    validate((value) => {\n      if (!value) return \"请输入内容\";\n      if (value.length > 10) return \"最多10个字符\";\n    });\n  }, []);\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <AI onChange={(e) => onChange(e.target.value)} value={value} />\n      <div style={{ color: \"red\" }}>{error}</div>\n    </div>\n  );\n};\n\nconst info = [\n  {\n    label: \"换热站设计流量2\",\n    keyName: \"stationDesignedG2\",\n    required: true,\n    value: CustomerInput\n  }\n];\n\nexport default () => {\n  const form = useForm();\n\n  return (\n    <>\n      <RefItem colCount={1} labelColSpan={6} options={info} form={form} />\n      <Button onClick={submit}>提交</Button>\n    </>\n  );\n};  \n  `,\n  language: \"javascript\"\n});\n\nexport const shouldVaild1 = getSummary({\n  summary: \"点击查看示例代码\",\n  detail: `\nimport { useEffect } from \"react\";\nimport { useForm, RefItem, CustomComponent } from \"react-ref-form\";\nimport {Input as AntdInput} from 'antd';\n\nconst CustomerInput = ({\n  value,\n  onChange,\n  error,\n  validate\n}: CustomComponent) => {\n  useEffect(() => {\n    validate((value) => {\n      if (!value) return \"请输入内容\";\n      if (value.length > 10) return \"最多10个字符\";\n    });\n  }, []);\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <AI onChange={(e) => onChange(e.target.value)} value={value} />\n      <div style={{ color: \"red\" }}>{error}</div>\n    </div>\n  );\n};\n\nconst info = [\n  {\n    label: \"换热站设计流量2\",\n    keyName: \"stationDesignedG2\",\n    required: true,\n    value: CustomerInput\n  }\n];\n\nexport default () => {\n  const form = useForm();\n\n  return (\n    <>\n      <RefItem colCount={1} labelColSpan={6} options={info} form={form} />\n      <Button onClick={submit}>提交</Button>\n    </>\n  );\n};  \n  `,\n  language: \"javascript\"\n});\n","import { useEffect } from \"react\";\nimport { useForm, RefItem, CustomComponent } from \"react-ref-form\";\nimport Input from \"../utils/customerComponents/Input\";\nimport { Button, Input as AI } from \"antd\";\nimport { Marked } from \"../utils/markdown\";\nimport { base1, base2 } from \"./constants\";\n\nconst CustomerInput = ({\n  value,\n  onChange,\n  error,\n  validate\n}: CustomComponent) => {\n  useEffect(() => {\n    validate((value) => {\n      if (!value) return \"请输入内容\";\n      if (value.length > 10) {\n        return \"最多10个字符\";\n      }\n      return;\n    });\n  }, []);\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <AI onChange={(e) => onChange(e.target.value)} value={value} />\n      <div style={{ color: \"red\" }}>{error}</div>\n    </div>\n  );\n};\n\nconst info1 = [\n  {\n    label: \"换热站设计流量1\",\n    keyName: \"stationDesignedG1\",\n    rules: [\n      { pattern: /\\w+/g, message: \"请输入内容\" },\n      { pattern: /^\\w{1,10}$/, message: \"最多10个字符\" }\n    ],\n    value: Input\n  }\n];\n\nconst info2 = [\n  {\n    label: \"换热站设计流量2\",\n    keyName: \"stationDesignedG2\",\n    required: true,\n    value: CustomerInput\n  }\n];\n\nexport default () => {\n  const form = useForm();\n\n  const submit = () => {\n    form.validateFields((error, value) => {\n      if (!error) {\n        console.log(value);\n      } else {\n        console.log(error);\n      }\n    });\n  };\n\n  return (\n    <>\n      <h1>校验</h1>\n      <h3>1、options中添加rules</h3>\n      <RefItem colCount={1} labelColSpan={6} options={info1} form={form} />\n      <Marked markdown={base1} />\n\n      <h3>2、自定义组件添加自定义校验函数</h3>\n      <RefItem colCount={1} labelColSpan={6} options={info2} form={form} />\n      <Marked markdown={base2} />\n\n      <h3>3、提交时再进行校验</h3>\n      <Button onClick={submit}>提交</Button>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useForm, RefItem } from \"react-ref-form\";\nimport FiledsTable from \"../utils/customerComponents/FiledsTable\";\nimport Input from \"../utils/customerComponents/Input\";\nimport { Button} from \"antd\";\nimport { getData } from \"../constants\";\nimport _ from \"lodash\";\nimport { Marked } from \"../utils/markdown\";\nimport { shouldVaild1 } from \"./constants\";\n\nconst info = [\n  {\n    label: \"换热站设计流量1\",\n    keyName: \"stationDesignedG1\",\n    required: true,\n    rules: [{ pattern: /\\w+/g, message: \"请输入内容\" }],\n    value: Input\n  },\n  {\n    label: \"换热站设计流量2\",\n    keyName: \"stationDesignedG2\",\n    rules: [{ pattern: /\\w+/g, message: \"请输入内容\" }],\n    value: Input\n  },\n  {\n    label: \"换热站设计流量3\",\n    keyName: \"stationDesignedG3\",\n    rules: [{ pattern: /\\w+/g, message: \"请输入内容\" }],\n    value: Input\n  },\n  {\n    label: \"换热站设计流量4\",\n    keyName: \"stationDesignedG4\",\n    value: FiledsTable\n  }\n];\n\nexport default () => {\n  const form = useForm();\n\n  useEffect(() => {\n    getData().then((res: any) => form.setFormValue(res));\n  }, []);\n\n  const submit = () => {\n    // 摘去不要校验的\n    const notRequiredPaths = _.reduce(\n      form.data.stationDesignedG4,\n      (all, { required }, key) => {\n        if (!required) {\n          return [...all, `stationDesignedG4.${key}.value`];\n        }\n        return all;\n      },\n      [] as string[]\n    );\n\n    form.validateFields(\n      (error, value) => {\n        if (!error) {\n          console.log(value);\n        } else {\n          console.log(error);\n        }\n      },\n      (key) => {\n        console.log(key, 2222);\n        return !notRequiredPaths.includes(key);\n      }\n    );\n  };\n\n  return (\n    <>\n      <h1>添加提交校验规则</h1>\n      <h3>表格中只有勾选的才会去校验</h3>\n      <RefItem colCount={1} labelColSpan={6} options={info} form={form} />\n      <Button onClick={submit}>提交</Button>\n      <Marked markdown={shouldVaild1} />\n    </>\n  );\n};\n","import Base from \"./base\";\nimport ShouldValid from \"./shouldValid\";\n\nexport default () => (\n  <>\n    <Base />\n    <ShouldValid />\n  </>\n);\n","import { getSummary } from \"../utils/markdown\";\n\nexport const markdown = getSummary({\n  summary: \"点击查看示例代码\",\n  detail: `\nimport { useEffect } from \"react\";\nimport { useForm, RefItem, DEPS, CustomComponent } from \"react-ref-form\";\nimport FiledsTable from \"../customerComponents/FiledsTable\";\nimport Input from \"../customerComponents/Input\";\nimport { Input as AI } from \"antd\";\nimport { getData } from \"../constants\";\nimport { Shine } from \"../customerComponents/ui\";\n\nconst designInfo = [\n  {\n    label: \"换热站设计流量1\",\n    keyName: \"stationDesignedG1\",\n    required: true,\n    value: ({ value, onChange, error }: CustomComponent) => {\n      const onchange = (e: string) => {\n        if (e === \"123\") {\n          onChange(\"①变了 我跟着变\", \"stationDesignedG2\", { atTop: true });\n        }\n        if (e === '1234') {\n          onChange(\"①变了 我跟着变\", \"stationDesignedG3\", { atTop: true });\n        }\n        onChange(e);\n      };\n      return (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Shine key={Math.random()} />\n          <AI placeholder=\"输入123/1234\" onChange={(e) => onchange(e.target.value)} value={value} />\n          <div style={{ color: \"red\" }}>{error}</div>\n        </div>\n      );\n    }\n  },\n  {\n    label: \"试试21\",\n    keyName: \"stationDesignedG2\",\n    value: ({ value, onChange, error }: CustomComponent) => {\n      const onchange = (e: string) => {\n        if (e === \"21\") {\n          onChange(\"②变了 我跟着变\", \"stationDesignedG2\", { atTop: true });\n        }\n        onChange(e);\n      };\n      return (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Shine key={Math.random()} />\n          <AI onChange={(e) => onchange(e.target.value)} value={value} />\n          <div style={{ color: \"red\" }}>{error}</div>\n        </div>\n      );\n    },\n    deps: [\"stationDesignedG1\"]\n  },\n  {\n    label: \"换热站设计流量3\",\n    keyName: \"stationDesignedG3\",\n    value: Input,\n    deps: DEPS.ALL\n  },\n  {\n    label: \"换热站设计流量4\",\n    keyName: \"stationDesignedG4\",\n    value: FiledsTable\n  }\n];\n\nexport default () => {\n  const form = useForm();\n\n  useEffect(() => {\n    getData().then((res: any) => form.setFormValue(res));\n  }, []);\n\n  return (\n    <>\n      <h1>基本用法</h1>\n      <h3>\n        第2项依赖第1项，第三项依赖全部DEPS.ALL，作用是当A满足条件B会重新渲染\n      </h3>\n      <RefItem colCount={1} labelColSpan={6} options={designInfo} form={form} />\n    </>\n  );\n};\n  `,\n  language: \"javascript\"\n});\n","import { useEffect } from \"react\";\nimport { useForm, RefItem, DEPS, CustomComponent } from \"react-ref-form\";\nimport FiledsTable from \"../utils/customerComponents/FiledsTable\";\nimport Input from \"../utils/customerComponents/Input\";\nimport { Input as AI } from \"antd\";\nimport { getData } from \"../constants\";\nimport { Marked } from \"../utils/markdown\";\nimport { Shine } from \"../utils/customerComponents/ui\";\nimport { markdown } from \"./constants\";\n\nconst designInfo = [\n  {\n    label: \"换热站设计流量1\",\n    keyName: \"stationDesignedG1\",\n    required: true,\n    value: ({ value, onChange, error }: CustomComponent) => {\n      const onchange = (e: string) => {\n        if (e === \"123\") {\n          onChange(\"①变了 我跟着变\", \"stationDesignedG2\", { atTop: true });\n        }\n        if (e === \"1234\") {\n          onChange(\"①变了 我跟着变\", \"stationDesignedG3\", { atTop: true });\n        }\n        onChange(e);\n      };\n      return (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Shine key={Math.random()} />\n          <AI\n            placeholder=\"输入123/1234\"\n            onChange={(e) => onchange(e.target.value)}\n            value={value}\n          />\n          <div style={{ color: \"red\" }}>{error}</div>\n        </div>\n      );\n    }\n  },\n  {\n    label: \"试试21\",\n    keyName: \"stationDesignedG2\",\n    value: ({ value, onChange, error }: CustomComponent) => {\n      const onchange = (e: string) => {\n        if (e === \"21\") {\n          onChange(\"②变了 我跟着变\", \"stationDesignedG3\", { atTop: true });\n        }\n        onChange(e);\n      };\n      return (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Shine key={Math.random()} />\n          <AI onChange={(e) => onchange(e.target.value)} value={value} />\n          <div style={{ color: \"red\" }}>{error}</div>\n        </div>\n      );\n    },\n    deps: [\"stationDesignedG1\"]\n  },\n  {\n    label: \"换热站设计流量3\",\n    keyName: \"stationDesignedG3\",\n    value: Input,\n    deps: DEPS.ALL\n  },\n  {\n    label: \"换热站设计流量4\",\n    keyName: \"stationDesignedG4\",\n    value: FiledsTable\n  }\n];\n\nexport default () => {\n  const form = useForm();\n\n  useEffect(() => {\n    getData().then((res: any) => form.setFormValue(res));\n  }, []);\n\n  return (\n    <>\n      <h1>依赖渲染</h1>\n      <h3>\n        第2项依赖第1项，第三项依赖全部DEPS.ALL，作用是当A满足条件B会重新渲染\n      </h3>\n      <RefItem colCount={1} labelColSpan={6} options={designInfo} form={form} />\n      <Marked markdown={markdown} />\n    </>\n  );\n};\n","import { useNavigate } from \"react-router-dom\";\n\nexport default ({ children }: { children: any }) => {\n  const history = useNavigate();\n  return (\n    <>\n      <div\n        style={{\n          color: \"skyblue\",\n          fontWeight: 700,\n          fontSize: 20,\n          borderBottom: \"1px solid #ccc\"\n        }}\n        onClick={() => history(\"/\")}\n      >\n        &lt;返回\n      </div>\n      {children}\n    </>\n  );\n};\n","/**\n * @file 示例入口\n * @author caifeng01\n */\n\nimport { Table } from \"antd\";\nimport { HashRouter, Routes, Route, Link } from \"react-router-dom\";\nimport Base from \"./base\";\nimport Validator from \"./validator\";\nimport Deps from \"./deps\";\nimport Navigator from \"./utils/customerComponents/Navigator\";\n\nconst introduction = [\n  {\n    name: \"基本使用\",\n    path: \"base\",\n    introduction: \"基本使用\",\n    element: <Base />\n  },\n  {\n    name: \"校验\",\n    path: \"validator\",\n    introduction: \"添加表单校验的方式\",\n    element: <Validator />\n  },\n  {\n    name: \"依赖渲染\",\n    path: \"deps\",\n    introduction: \"添加依赖渲染\",\n    element: <Deps />\n  }\n];\n\nconst columns = [\n  {\n    title: \"name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  },\n  {\n    title: \"介绍\",\n    dataIndex: \"introduction\",\n    key: \"introduction\"\n  },\n  {\n    title: \"链接\",\n    dataIndex: \"path\",\n    key: \"path\",\n    render: (url: string) => <Link to={`/${url}`}>点击查看</Link>\n  }\n];\n\nconst Introduction = () => (\n  <Table rowKey=\"path\" dataSource={introduction} columns={columns} />\n);\n\nconst RouteList = [{ path: \"/\", element: <Introduction /> }].concat(\n  introduction\n);\n\nexport default () => (\n  <HashRouter>\n    <Routes>\n      {RouteList.map(({ path, element }) => (\n        <Route\n          key={path}\n          path={path}\n          element={path === \"/\" ? element : <Navigator>{element}</Navigator>}\n        />\n      ))}\n    </Routes>\n  </HashRouter>\n);\n","import React from 'react';\nimport { render } from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport App from \"./app\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}